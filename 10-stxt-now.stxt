Document (stxt.dev/namespace.stxt): Chapter 10: What Now?
	Default:
		Title: STXT: The Book
		
	Navigation:
		Previous: Previous (09-semantic-web)
		Next: Next (11-end)

	Metadata:
		Title: Chapter 13: What Now?
		Description: What to do from now on. Proposals and possibilities.
		Author: Joan Costa Mombiela
		last modif: 2013-03-01
	
	Header:  Chapter 10: What Now?
	Subheader: Where to Start
		
	Content:
		This is not a book. It’s almost a proposal. The beginning of future work.
		I’d like to see a new movement arise from this.
		We’ve been doing things the same way for a long time, and I’d like to break away from that.
		But in a beautiful, elegant way. And accessible to everyone.
		
		Let this be my contribution.
		
		This may seem a bit pretentious, but I like the idea so much that I can’t help it.
		Forgive my audacity.
		
		With this book, I’ve tried to explain how I understand STxT and what I intended to do by creating this language.
		Did I really create it? I suppose the language was already there, and all I had to do
		was bring it to light. I’d like to think I did it like a sculptor.
		
	Subheader: Things That Still Need to Be Done
		
	Content:
		There’s a lot to be done if we really want to adopt this technology.
		I’ll give you some ideas, although the most interesting applications are probably beyond what I can imagine right now.
		
		That’s the beauty of it: you launch an idea, and it no longer belongs to you, it grows and matures on its own,
		and you can only watch where it goes :-)
		
		In future editions, I hope to "cross off" some of these items
		and add new ones that are currently unthinkable.
	
	# --------------------------------------------------------------------------------------------------------------------
	# Here is the real list of _what remains to be done_, though it’s not in my power to solve it :-(
	# 
	#	* Air for all (already done! at least something is done...)
	#	* Water for all
	#	* Food for all
	#   * Dignified housing for all
	#   * Quality education for all
	#	* Dignified work for all
	#	* Energy for all
	#	* Money for all (Well, I’d like it to be a different kind of money, fairer, non-speculative,
	#     and different from what we know. Again, please think of something better than what we have now.
	#	  I’m sure there are alternatives. You just have to find them. But to do that, you have to look.)
	#	* .....
	#	* In short, humanity for all
	#	
	#	Well, now that I’ve shown _what really remains to be done_, let’s get back to STxT.
	#	The following sections are about that.
	# --------------------------------------------------------------------------------------------------------------------
		
	Subheader: Editors with Assisted Content
		
	Content:
		We have many text editors for many different languages.
		What would you think of editors for STxT?
		Our favorite editor, but now collecting semantics from the web
		and creating any kind of structured content.
		Easily and quickly. For everyone.
		Now the content rules appear automatically. With descriptions.
		Content is easy and quick to create. For everyone.
		
	Subheader: Libraries
		
	Content:  
		We need STxT parsers in every programming language.
		There’s a lot of work to be done here. Fast and efficient language parsers.
		
		It’s like porting what we already have in XML to STxT. And there’s a lot of it.
		
	Subheader: Language Converter
		
	Content:
		Surely there are languages we don’t like, or that we think could be simpler.
		They can be converted directly to STxT or converters can be made to go from STxT to another more specialized,
		but less semantic language.
		
		For example, we have LaTeX, unbeatable in terms of output document quality, but a bit daunting for most people.
		What would a converter from STxT to LaTeX look like?
		We could create document types (articles, letters,...) and converters from them to LaTeX.
		The original text would be very clear (STxT) and the final result file excellent (pdf).
		
	  	This would allow IT experts to maintain more specialized technologies,
	  	and others to use simpler formats like STxT.
		
	Subheader: Language Replacement
		
	Content:
		This can be done in many places: XML documents, RSS feeds, special text files,
		program configuration files—there are thousands of places where a language or files could be directly replaced with STxT.
		
		What would we gain? A single editor would be enough, texts would be easier to maintain, and by having a grammar,
		we’d also have a description of what a document should be like.
	
	Subheader: Semantic Web
		
	Content:
		There’s so much work to be done here that I’ll just say to go back and look at the previous chapter,
		hypnotize yourselves, and... go for it!
		
	Alert:
		Who knows what might come of it! :-D
