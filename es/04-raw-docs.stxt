Document (stxt.dev/namespace.stxt): Capítulo 4: Documentos sin namespace
	Default:
		Title: STXT: El Libro
		
	Navigation:
		Previous: Anterior (03-ai-powered)
		Next: Siguiente (05-ns-docs)

	Header: Capítulo 4: Documentos sin namespace
	Content: Creo que ya ha quedado claro como son los documentos sin namespace. Ejemplo:
	
	Code:
		Receta: Receta de macarrones
			Descripción:
				:Esta es la descripción de la recta de macarrones.
				:Bla, bla, bla
				:Bla, bla, bla
			Comensales: 3
			Dificultad: fácil
			Ingredientes:
				Ingrediente: (100g) Tomate
				Ingrediente: (240g) Macarrones
			Pasos:
				Paso: (1) Hacer sofrito
				Paso: (2) Hervir macarrones
				Paso: (3) Juntar macarrones con sofrito y servir

	Content: Vamos a profundizar un poco más.

	Subheader: Codificación
	
	Assert: Codificación UTF-8 Siempre
	
	Content: 
		Fin. Es una buena regla y estoy muy contento con ella. 
		Hoy en día es la codificación más aceptable, más universal,
		y más implementada. No creo que esto cambie en los próximos años.	
	
	Subheader: Identificadores
	
	Assert: Los Identificadores son CASE-INSENSITIVE
	
	Assert: 
		Se permiten espacios en los nombres. \
		¿Por qué no? ¿Para parecer informáticos?\
		Los tiempos están cambiando :-D

	Subheader: Caracteres de escape
	
	Assert: No existen caracteres de escape
	
	Content: 
		Creo que es lo mejor que he oído en mucho tiempo. 
		**No existen caracteres de escape** _porque no son necesarios_.
		Debido a la estructura no son necesarios.	

	Subheader:	Comentarios
		
	Content:
		Todos los informáticos saben qué son los comentarios en cualquier lenguaje.
		Por si hay algún neófito explicaré que los comentarios son texto que sólo están ahí 
		para comentar o añadir alguna observación, pero no influyen en el documento en sí.
		
	assert:
		En STxT son comentarios todas las líneas que empiezan por el carácter #
		
	Content:
		Los comentarios no tienen que tener ningún tipo de formato, 
		es texto libre que el autor del documento puede incluir. 
		Además, no tiene que estar situado en ningún sitio concreto del documento. 
		Cualquier línea que empiece por # será tratada como comentario,
		y no será tenida en cuenta ni en programas ni en comunicaciones.
		
		Ejemplo:

	Code:
		Receta: Receta de macarrones
		***# (1) Esto es un comentario***
		***# (2) Esto también es un comentario***
			***# (3) Esto también es un comentario***
			Descripción:
				:Esta es la descripción de la recta de macarrones.
				:Bla, bla, bla
			***# (4) Esto es un comentario***	
				:Bla, bla, bla
				***# (5) esto NO es un comentario***
			Comensales: 3
			Dificultad: fácil
			Ingredientes:
				Ingrediente: (100g) Tomate
				Ingrediente: (240g) Macarrones
			Pasos:
				Paso: (1) Hacer sofrito
				Paso: (2) Hervir macarrones
				Paso: (3) Juntar macarrones con sofrito y servir	
	
	Content: Aquí cabe señalar que `(1),(2),(3) y (4)` son comentarios, mientras 
		que `(5)` no lo es, ya que está dentro del texto identado. 

	Subheader:	Nodos e identación
	
	Content:	
		Antes hemos dicho que un documento STxT es un conjunto de nodos anidados. 
		La identación es muy similar a otros lenguajes, y se pueden usar tabuladores o espacios.
		
	Assert: 
		4 espacios equivalen a un tabulador
		Es mejor no mezclar documentos con tabuladores y espacios
		
	Subheader: Nodos multilínea
	
	Content: 
		Estos nodos permiten tener **textos completos en varias líneas**. En documentos con namespace
		serán equivalentes a nodos tipo `TEXT`. Se construyen con líneas
		que empiezan por `:`, pero sin una etiqueta previa. Ejemplo:
		
	Code:
		Receta: Receta de macarrones
			***Descripción:***
				***:Esta es la descripción de la recta de macarrones.***
				***:Bla, bla, bla***
				***:Bla, bla, bla***
			Comensales: 3
			Dificultad: fácil
			Ingredientes:
				Ingrediente: (100g) Tomate
				Ingrediente: (240g) Macarrones
			Pasos:
				Paso: (1) Hacer sofrito
				Paso: (2) Hervir macarrones
				Paso: (3) Juntar macarrones con sofrito y servir	
				
	Content:
		Acabamos de ver que el nodo `Descripción` es un nodo MULTILINE. 
	
	Subheader: (Prefix) Central (Sufix)
	
	Content: 
		Aunque no forma parte del lenguaje, es una práctica habitual que 
		campos simples se estructuren con `(prefix) central (sufix)`.
		Pueden aparecer las 3 o sólo 1 o 2 de ellas. Ejemplo:
		
	Code:
		Receta: Receta de macarrones
			Descripción:
				:Esta es la descripción de la recta de macarrones.
				:Bla, bla, bla
				:Bla, bla, bla
			Comensales: 3
			Dificultad: fácil
			Ingredientes:
				Ingrediente: ***(100g) Tomate***
				Ingrediente: ***(240g) Macarrones***
			Pasos:
				Paso: ***(1) Hacer sofrito***
				Paso: ***(2) Hervir macarrones***
				Paso: ***(3) Juntar macarrones con sofrito y servir***
	
